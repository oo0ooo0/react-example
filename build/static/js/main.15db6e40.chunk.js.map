{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","xInNext","slice","length","calculateWinner","xIsNext","setState","concat","step","status","current","winner","moves","map","move","desc","key","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"gNAMA,SAASA,EAAOC,GACZ,OACI,4BAAQC,UAAU,SAASC,QAASF,EAAME,SACrCF,EAAMG,O,IAIXC,E,qLACSC,GAAI,IAAD,OACd,OACE,kBAACN,EAAD,CACII,MAAOG,KAAKN,MAAMO,QAAQF,GAC1BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,+BAMxC,OACE,6BACE,yBAAKJ,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKP,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKP,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,S,GA1BTC,IAAMC,WAiCpBC,E,YACJ,WAAYX,GAAQ,IAAD,8BACjB,4CAAMA,KACDY,MAAQ,CACXC,QAAS,CACP,CACAN,QAASO,MAAM,GAAGC,KAAK,QAGzBC,WAAY,EACZC,SAAS,GATM,E,yEAaPZ,GACV,IAAMQ,EAAUP,KAAKM,MAAMC,QAAQK,MAAM,EACvCZ,KAAKM,MAAMI,WAAa,GAEpBT,EADUM,EAAQA,EAAQM,OAAQ,GAChBZ,QAAQW,QAC5BE,EAAgBb,IAAYA,EAAQF,KAGxCE,EAAQF,GAAKC,KAAKM,MAAMS,QAAU,IAAM,IACxCf,KAAKgB,SAAS,CACVT,QAASA,EAAQU,OAAO,CAAC,CACvBhB,QAASA,KAEXS,WAAYH,EAAQM,OACtBE,SAAUf,KAAKM,MAAMS,a,6BAIpBG,GACLlB,KAAKgB,SAAS,CACZN,WAAYQ,EACZH,QAAUG,EAAO,IAAO,M,+BAIlB,IAiBAC,EAjBD,OACDZ,EAAUP,KAAKM,MAAMC,QACrBa,EAAUb,EAAQP,KAAKM,MAAMI,YAC7BW,EAASP,EAAgBM,EAAQnB,SAE/BqB,EAAQf,EAAQgB,KAAI,SAACL,EAAMM,GAC/B,IAAMC,EAAOD,EACX,eAAiBA,EACjB,mBACJ,OACE,wBAAIE,IAAKF,GACP,4BAAQ5B,QAAS,kBAAM,EAAK+B,OAAOH,KAChCC,OAYP,OALIN,EADEE,EACO,WAAaA,EAEb,iBAAmBrB,KAAKM,MAAMS,QAAU,IAAM,KAIzD,yBAAKpB,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACG,EAAD,CACEG,QAASmB,EAAQnB,QACjBL,QAAS,SAACG,GAAD,OAAO,EAAK6B,YAAY7B,OAGrC,yBAAKJ,UAAU,aACb,6BAAMwB,GACN,4BAAKG,S,GAzEInB,IAAMC,WAuFzB,SAASU,EAAgBb,GAWvB,IAVA,IAAM4B,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEF9B,EAAI,EAAGA,EAAI8B,EAAMhB,OAAQd,IAAK,CAAC,IAAD,cACjB8B,EAAM9B,GADW,GAC5B+B,EAD4B,KACzBC,EADyB,KACtBC,EADsB,KAEnC,GAAI/B,EAAQ6B,IAAM7B,EAAS6B,KAAO7B,EAAS8B,IAAM9B,EAAS6B,KAAO7B,EAAQ+B,GACrE,OAAO/B,EAAS6B,GAGxB,OAAO,KAtBTG,IAASC,OACP,kBAAC7B,EAAD,MACA8B,SAASC,eAAe,U","file":"static/js/main.15db6e40.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\n\nfunction Square(props) {\n    return (\n        <button className=\"square\" onClick={props.onClick}>\n            {props.value}\n        </button>\n    );\n}\n  class Board extends React.Component {\n    renderSquare(i) {\n      return (\n        <Square \n            value={this.props.squares[i]} \n            onClick={() => this.props.onClick(i)}\n         />\n      );\n    }\n  \n    render() {\n      return (\n        <div>\n          <div className=\"board-row\">\n            {this.renderSquare(0)}\n            {this.renderSquare(1)}\n            {this.renderSquare(2)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(3)}\n            {this.renderSquare(4)}\n            {this.renderSquare(5)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(6)}\n            {this.renderSquare(7)}\n            {this.renderSquare(8)}\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  class Game extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        history: [\n          {\n          squares: Array(9).fill(null),\n        }\n      ],\n        stepNumber: 0,\n        xInNext: true,\n      };\n    }\n\n    handleClick(i) {\n      const history = this.state.history.slice(0,\n        this.state.stepNumber + 1);\n      const current = history[history.length -1];\n      const squares = current.squares.slice();\n      if (calculateWinner(squares) || squares[i]) {\n          return;\n      }\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\n      this.setState({\n          history: history.concat([{\n            squares: squares\n          }]),\n          stepNumber: history.length,\n        xIsNext: !this.state.xIsNext,\n      });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n      const moves = history.map((step, move) => {\n        const desc = move ?\n          'Go to move #' + move :\n          'Go to game start' ;\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>\n            {desc}</button>\n        </li>\n      );\n      });\n\n        let status;\n        if (winner) {\n          status = 'Winner: ' + winner;\n        } else {\n          status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n        }\n\n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board\n              squares={current.squares}\n              onClick={(i) => this.handleClick(i)}   \n              />\n          </div>\n          <div className=\"game-info\">\n            <div>{status}</div>\n            <ol>{moves}</ol>\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  // ========================================\n  \n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );\n\n  function calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ]\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares [a] === squares [b] && squares [a] === squares[c] ) {\n            return squares [a] ;\n        }\n    }\n    return null;\n  }\n  "],"sourceRoot":""}